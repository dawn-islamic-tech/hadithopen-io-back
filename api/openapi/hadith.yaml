openapi: 3.0.3
info:
  title: Hadithopen.io API
  version: 1.0.0
servers:
  - url: /api/hadith
paths:
  /v1/story:
    get:
      summary: Get all available hadith
      operationId: GetHadith
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HadithCardsResponse'
    post:
      requestBody:
        description: Update an existent pet in the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HadithObjectRequest'
      summary: Create hadith
      operationId: CreateHadith
      responses:
        '200':
          description: OK

  /v1/story/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get current hadith
      operationId: GetHadithByID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HadithResponse'

  /v1/story/{id}/transmitters:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get current hadith transmitters
      operationId: GetTransmitters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransmittersResponse'

  /v1/story/search:
    parameters:
      - in: query
        name: q
        required: true
        schema:
          type: string
    get:
      operationId: GetSearchedHadith
      summary: Get found hadith
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HadithCardsResponse'

  /v1/story/{id}/tags:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
    get:
      operationId: GetSearchedTags
      summary: Get hadith tags
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HadithTagsResponse'

components:
  schemas:
    ObjectTranslate:
      type: object
      properties:
        lang:
          type: string
          default: ''
        translate:
          type: string
          default: ''

    ObjectStory:
      type: object
      properties:
        title:
          type: array
          items:
            $ref: '#/components/schemas/ObjectTranslate'


    ObjectVersion:
      type: object
      properties:
        original:
          type: string
          default: ''
        isDefault:
          type: boolean
          default: false
        version:
          type: array
          items:
            $ref: '#/components/schemas/ObjectTranslate'

    HadithObjectRequest:
      type: object
      properties:
        story:
          $ref: '#/components/schemas/ObjectStory'
        brought:
          type: array
          items:
            $ref: '#/components/schemas/ObjectTranslate'
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ObjectVersion'
        comment:
          type: array
          items:
            $ref: '#/components/schemas/ObjectTranslate'
      required:
        - story
        - brought
        - versions
        - comment

    HadithCard:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        desc:
          type: string

    HadithCardsResponse:
      type: array
      items:
        $ref: "#/components/schemas/HadithCard"

    HadithResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        origin:
          type: string
          example: |
            إدخال بعض النوادر أو الكلمات العشوائية إلى النص. إن كنت تريد أن تستخدم نص لوريم 
             إيبسوم ما، عليك أن تتحقق أولاً أن ليس هناك أي كلمات أو عبارات محرجة أو غير لائقة مخبأة في هذا النص. بينما تعمل
            جميع مولّدات نصوص لوريم إيبسوم على الإنترنت على إعادة تكرار مقاطع من نص لوريم إيبسوم نفسه عدة 
             مرات بما تتطلبه الحاجة، يقوم مولّدنا هذا باستخدام كلمات من قاموس يحوي على أكثر من
        translate:
          type: string
          example: |
            here are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration 
            in some form, by injected humour, or randomised words which don't look even slightly believable.
        interpretation:
          type: string
          example: |
            It is a long established fact that a reader will be distracted by the readable content of a page when 
            looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of
            letters, as opposed to using 'Content here, content here', making it look like readable English.

    Seq:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    TransmittersResponse:
      type: object
      properties:
        seqs:
          type: array
          items:
            $ref: "#/components/schemas/Seq"
        lines:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64
          example: |
            1: [2, 3]
            3: [4]

    HadithTag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    HadithTagsResponse:
      type: array
      items:
        $ref: "#/components/schemas/HadithTag"
